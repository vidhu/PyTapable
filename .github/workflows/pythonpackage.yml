# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PYTHONPATH: '.'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [
          'py27',
          'py35',
          'py36',
          'py37',
          'py38',
          'docs'
        ]
        include:
          - name: 'py27'
            python: '2.7'
          - name: 'py35'
            python: '3.5'
          - name: 'py36'
            python: '3.6'
          - name: 'py37'
            python: '3.7'
          - name: 'py38'
            python: '3.8'
          - name: 'docs'
            python: '3.8'
            send_coverage: true

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r test_requirements.txt
        if [ -f test_requirements.txt ]; then pip install -r test_requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest --cov=pytapable/
    - name: Check Coverage Over 90%
      run: |
        coverage report --fail-under=90
    - name: Upload coverage to Codecov
      if: (matrix.send_coverage)
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN  }}
        file: .coverage
        flags: pytests
        env_vars: OS,PYTHON
